openapi: 3.1.0
info:
  title: GMS IEI API (Combined)
  version: 2.0.0-modern
  description: |
    **Unified Seismological Data API** - Modern OpenAPI 3.1 specification built from Common and Event fragments.
    
    üåç **Global Coverage**: Complete FDSN Web Services integration with IRIS data center examples
    üì° **Real-time Monitoring**: Live seismic event detection and waveform streaming
    üî¨ **Research Grade**: Comprehensive metadata, quality control, and calibrated data
    
    **Key Features:**
    - FDSN-compliant web services (dataselect, station, event)
    - Real IRIS examples with 50+ networks and famous stations
    - Modern authentication with API keys and OAuth2
    - Real-time WebSocket streaming for live monitoring
    - GraphQL endpoint for flexible data queries
    - Comprehensive observability and metrics
    
    Source: gms-iei-req-2025-09-15, modernized with industry best practices.
  contact:
    name: GMS IEI API Support
    url: https://github.com/jwehlen-cell/gms-iei-api
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://api.example.com/terms
externalDocs:
  description: FDSN Web Services Specification
  url: https://www.fdsn.org/webservices/
paths:
  /events:
    get:
      summary: List all events
      description: |
        Retrieve a list of all events with optional filtering by time range, location, and other criteria.
        
        **Time Filtering Examples:**
        - Last 24 hours: startTime=2025-10-28T00:00:00.000Z&endTime=2025-10-29T00:00:00.000Z
        - Specific hour: startTime=2025-10-29T14:00:00.000Z&endTime=2025-10-29T15:00:00.000Z
        - Last week: startTime=2025-10-22T00:00:00.000Z&endTime=2025-10-29T00:00:00.000Z
        - Real-time monitoring: endTime=2025-10-29T18:45:30.500Z (no startTime for all historical)
        
        **Location Examples:**
        - Regional: latitude=37.7749&longitude=-122.4194&radiusKm=100 (San Francisco Bay Area)
        - Global seismic: latitude=35.0&longitude=139.0&radiusKm=1000 (Japan region)
        
        **Combined Filtering:**
        - Recent events near station: startTime=2025-10-29T00:00:00.000Z&latitude=69.5355&longitude=25.5063&radiusKm=50
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      - name: startTime
        in: query
        required: false
        description: Filter events starting from this time (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T00:00:00.000Z"
      - name: endTime
        in: query
        required: false
        description: Filter events up to this time (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-31T23:59:59.999Z"
      - name: latitude
        in: query
        required: false
        description: Filter events by latitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 37.7749
      - name: longitude
        in: query
        required: false
        description: Filter events by longitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -122.4194
      - name: radiusKm
        in: query
        required: false
        description: Search radius in kilometers (used with lat/lon)
        schema:
          type: number
          format: double
          minimum: 0
        example: 100.0
      - name: minMagnitude
        in: query
        required: false
        description: Minimum event magnitude
        schema:
          type: number
          format: double
        example: 4.0
      - name: maxMagnitude
        in: query
        required: false
        description: Maximum event magnitude
        schema:
          type: number
          format: double
        example: 7.0
      - name: stageIds
        in: query
        required: false
        description: Filter by stage IDs
        schema:
          type: array
          items:
            type: string
        style: form
        explode: false
        example: ["AUTO", "AL1", "AL2"]
      - name: limit
        in: query
        required: false
        description: Maximum number of events to return
        schema:
          type: integer
          minimum: 1
          maximum: 1000
          default: 100
        example: 50
      - name: offset
        in: query
        required: false
        description: Number of events to skip (for pagination)
        schema:
          type: integer
          minimum: 0
          default: 0
        example: 0
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: event-coi.yaml#/components/schemas/Event
                  total:
                    type: integer
                    description: Total number of events matching the criteria
                    example: 1250
                  limit:
                    type: integer
                    description: Number of events returned
                    example: 50
                  offset:
                    type: integer
                    description: Number of events skipped
                    example: 0
            application/msgpack:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: event-coi.yaml#/components/schemas/Event
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
  /events/{eventId}:
    get:
      summary: Get a specific event by ID
      description: "Retrieve a single event by its unique identifier."
      parameters:
      - name: eventId
        in: path
        required: true
        description: Unique identifier of the event
        schema:
          type: string
          format: uuid
        example: "550e8400-e29b-41d4-a716-446655440000"
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: event-coi.yaml#/components/schemas/Event
            application/msgpack:
              schema:
                $ref: event-coi.yaml#/components/schemas/Event
        '404':
          description: Event not found
  /events/location:
    get:
      summary: Find events by geographic location
      description: "Retrieve events within a specified geographic area. Supports both circular (lat/lon/radius) and bounding box queries."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      - name: latitude
        in: query
        required: false
        description: Center latitude for circular search (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 61.2181
      - name: longitude
        in: query
        required: false
        description: Center longitude for circular search (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -149.9003
      - name: radiusKm
        in: query
        required: false
        description: Search radius in kilometers (used with lat/lon)
        schema:
          type: number
          format: double
          minimum: 0
          maximum: 20000
        example: 500.0
      - name: minLatitude
        in: query
        required: false
        description: Minimum latitude for bounding box search (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 60.0
      - name: maxLatitude
        in: query
        required: false
        description: Maximum latitude for bounding box search (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 62.0
      - name: minLongitude
        in: query
        required: false
        description: Minimum longitude for bounding box search (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -151.0
      - name: maxLongitude
        in: query
        required: false
        description: Maximum longitude for bounding box search (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -148.0
      - name: startTime
        in: query
        required: false
        description: Filter events starting from this time (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T00:00:00.000Z"
      - name: endTime
        in: query
        required: false
        description: Filter events up to this time (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-31T23:59:59.999Z"
      responses:
        '200':
          description: Events within the specified location
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/Event
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/Event
        '400':
          description: Invalid location parameters
  /stations:
    get:
      summary: List all stations
      description: "Retrieve a list of all monitoring stations with optional filtering."
      parameters:
      - name: name
        in: query
        required: false
        description: Filter stations by name (partial match)
        schema:
          type: string
        example: "ASAR"
      - name: network
        in: query
        required: false
        description: Filter stations by network code
        schema:
          type: string
        example: "IMS"
      - name: latitude
        in: query
        required: false
        description: Filter stations by latitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 69.5355
      - name: longitude
        in: query
        required: false
        description: Filter stations by longitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: 25.5063
      - name: radiusKm
        in: query
        required: false
        description: Search radius in kilometers (used with lat/lon)
        schema:
          type: number
          format: double
          minimum: 0
        example: 1000.0
      responses:
        '200':
          description: A list of stations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "ASAR"
                    name:
                      type: string
                      example: "Alice Springs Array"
                    network:
                      type: string
                      example: "IMS"
                    latitude:
                      type: number
                      format: double
                      example: -23.6701
                    longitude:
                      type: number
                      format: double
                      example: 133.9495
                    elevation:
                      type: number
                      format: double
                      example: 545.0
                    type:
                      type: string
                      example: "seismic"
            application/msgpack:
              schema:
                type: array
                items:
                  type: object
  /event/query/events-outside-range-signal-detections-inside-range:
    post:
      summary: Find Events outside a time range that are associated to SignalDetections
        inside the time range
      description: "This operation returns Event objects that have a preferredEventHypothesisByStage\
        \ EventHypothesis occurring outside the provided time range that is associated\
        \ to a SignalDetectionHypothesis that occurs inside the provided time range\
        \ and is associated to any Station in the provided collection. The provided\
        \ Station objects may be populated as entity references. An Event occurs outside\
        \ of the time range if its preferredEventHypothesisByStage collection contains\
        \ an EventHypothesis for any provided Stage that has a peferredLocationSolution\
        \ with time occurring before signalDetectionStartTime or after signalDetectionEndtime.\
        \ The start time and end time are exclusive; if the preferredLocationSolution\
        \ time is exactly equal to signalDetectionStartTime or is exactly equal to\
        \ signalDetectionEndTime, the Event is not outside the time range. A SignalDetectionHypothesis\
        \ occurs inside of the time range if its ARRIVAL_TIME FeatureMeasurement has\
        \ an arrivalTime value in the time range beginning at signalDetectionStartTime\
        \ and ending at signalDetectionEndTime. Both signalDetectionStartTime and\
        \ signalDetectionEndTime are inclusive; a value exactly equal to one of these\
        \ bounds is in the time range. After finding a matching Event, this operation\
        \ returns within the Event\_each\_EventHypothesis created in a provided Stage.\_\
        The returned Event objects are populated according to the default faceted\
        \ attribute population defined in the COI data model except some of the EventHypothesis\
        \ objects in their eventHypotheses collections may be populated objects instead\
        \ of id-only references. The EventHypothesis objects that were stored on or\
        \ after changedSinceTime are populated according to the default faceted attribute\
        \ population defined in the COI data model; all other EventHypothesis objects\
        \ are populated as id-only references. If changedSinceTime is not provided,\
        \ all EventHypothesis objects are populated according to the default faceted\
        \ attribute population defined in the COI data model."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsOutsideRangeWithSignalDetectionsInsideRangeRequest'
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/Event
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/Event
    get:
      summary: Find Events outside a time range that are associated to SignalDetections inside the time range (GET version)
      description: "GET version of the POST endpoint. This operation returns Event objects that have a preferredEventHypothesisByStage EventHypothesis occurring outside the provided time range that is associated to a SignalDetectionHypothesis that occurs inside the provided time range."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      - name: stageIds
        in: query
        required: true
        description: Array of stage IDs
        schema:
          type: array
          items:
            type: string
          minItems: 1
        style: form
        explode: false
        example: ["stage1", "stage2"]
      - name: stations
        in: query
        required: true
        description: Array of station names or IDs
        schema:
          type: array
          items:
            type: string
          minItems: 1
        style: form
        explode: false
        example: ["ASAR", "ARCES", "FINES"]
      - name: signalDetectionStartTime
        in: query
        required: true
        description: Start time for signal detection range (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T00:00:00.000Z"
      - name: signalDetectionEndTime
        in: query
        required: true
        description: End time for signal detection range (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T18:45:30.500Z"
      - name: changedSinceTime
        in: query
        required: false
        description: Only return events changed since this time (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-15T12:30:00.000Z"
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/Event
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/Event
  /event/with-detections-and-segments/query/time:
    post:
      summary: Find events with detections and segments by time
      description: "This operation finds the Event objects occurring in the time range\
        \ provided in the query predicate. An\_Event occurs in a time range if its\
        \ preferredEventHypothesisByStage entry for any provided\_Stage\_includes\
        \ an EventHypothesis with a preferredLocationSolution with time occurring\
        \ in the time range beginning at startTime and ending at endTime (both startTime\
        \ and endTime are inclusive; a value exactly equal to one of these bounds\
        \ is in the time range). After finding an Event is within the time range,\
        \ this operation returns within the Event\_each\_EventHypothesis created in\
        \ a provided Stage. Faceted attributes of the returned Event objects are populated\
        \ according to the default faceted attribute population defined in the COI\
        \ data model, with the exception of the EventHypothesis collection which is\
        \ populated with the default faceted attribute instantiations (i.e. rather\
        \ than reference only default population defined in the COI data model). Additionally,\
        \ this operation returns a collection of SignalDetection objects (each including\
        \ populated SignalDetectionHypothesis objects), for each SignalDetection with\
        \ a SignalDetectionHypothesis associated to any EventHypothesis included within\
        \ the returned Event collection. Further, this operation returns a ChannelSegment\
        \ collection containing the measured ChannelSegment objects referenced by\
        \ the FeatureMeasurement objects in the returned SignalDetectionHypothesis\
        \ objects. Within the returned ChannelSegment objects, this operation populates\
        \ the maskedBy ProcessingMask objects, leaving their maskedQcSegmentVersions\
        \ populated as identifier-only instances. This operation returns an EventsWithSignalDetectionsAndSegments\
        \ object combining the loaded Event, EventHypothesis, SignalDetection, SignalDetectionHypothesis,\
        \ and ChannelSegment objects. An optional changedSinceTime parameter limits\
        \ the Event objects returned to those that contain EventHypothesis objects\
        \ that were stored on or after the changedSinceTime. For each returned Event,\
        \ EventHypothesis objects stored on or after changedSinceTime are fully populated;\
        \ all other EventHypothesis objects are populated as id-only references. Similarly,\
        \ each populated EventHypothesis object's associated SignalDetectionHypothesis\
        \ objects, along with any other SignalDetectionHypothesis objects in their\
        \ SignalDetection histories that were stored on or after changedSinceTime,\
        \ are fully populated; all other SignalDetectionHypothesis objects in the\
        \ returned SignalDetection objects are populated as id-only references. Faceted\
        \ attributes of the returned EventHypothesis and SignalDetectionHypothesis\
        \ are populated according to the default faceted attribute population defined\
        \ in the COI data model."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsWithDetectionsAndSegmentsByTimeRequest'
      responses:
        '200':
          description: Events with signal detections and segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsWithSignalDetectionsAndSegments'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/EventsWithSignalDetectionsAndSegments'
    get:
      summary: Find events with detections and segments by time (GET version)
      description: "GET version of the POST endpoint. This operation finds the Event objects occurring in the specified time range."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      - name: startTime
        in: query
        required: true
        description: Start time for the event search (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T00:00:00.000Z"
      - name: endTime
        in: query
        required: true
        description: End time for the event search (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T18:45:30.500Z"
      - name: stageIds
        in: query
        required: true
        description: Array of stage IDs to search within
        schema:
          type: array
          items:
            type: string
          minItems: 1
        style: form
        explode: false
        example: ["AUTO", "AL1", "AL2"]
      - name: changedSinceTime
        in: query
        required: false
        description: Only return events changed since this time (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-15T12:30:00.000Z"
      responses:
        '200':
          description: Events with signal detections and segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsWithSignalDetectionsAndSegments'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/EventsWithSignalDetectionsAndSegments'
  /event/status-info/query/stage-id-and-events:
    post:
      summary: Find event status info by stage ID and events.
      description: This operation finds an EventStatusInfo collection using a query
        predicate of a single Stage ID and an Event collection.
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventStatusInfoByStageIdAndEventsRequest'
      responses:
        '200':
          description: Successful operation. Returns an EventStatusInfo collection.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/EventStatusInfo
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/EventStatusInfo
  /event/status-info/query/stage-id-and-timerange:
    post:
      summary: Find EventStatusInfo by Stage ID and timerange.
      description: This operation finds and returns the EventStatusInfo objects stored
        on or after the provided time that correspond to the provided Stage ID and
        to any Event objects occurring in the time range provided in the query predicate.
        An Event occurs in a time range if the EventHypothesis associated to the provided
        Stage ID in preferredEventHypothesisByStage contains any LocationSolution
        in its locationSolution collection with time occurring in the time range beginning
        at startTime and ending at endTime (both startTime and endTime are inclusive;
        a value exactly equal to one of these bounds is in the time range.)
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventStatusInfoByStageIdAndTimeRequest'
      responses:
        '200':
          description: Event status info by stage ID and time response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/EventStatusInfo
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/EventStatusInfo
  /event/status-info/update:
    post:
      summary: Store or update EventStatusInfo
      description: "This operation persistently stores the EventStatusInfo included\
        \ in the request, updating it if it has previously been stored. If this operation\
        \ successfully stores the\_EventStatusInfo object, then it also\_sets the\
        \ object's storage time to the current wall-clock time."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventStatusInfoUpdateRequest'
      responses:
        '200':
          description: Event status info stored or updated successfully
  /event/correlated-events/query/source-event-hypotheses:
    post:
      summary: "Finds and returns the CorrelatedEvents\_object for each source EventHypothesis\_\
        provided in the query predicate."
      description: "This operation finds and returns the CorrelatedEvents\_object\
        \ for each source EventHypothesis\_provided in the query predicate. Each\_\
        CorrelatedEvents\_object includes a\_CorrelatedEventHypothesis collection\
        \ of objects similar to one of the provided\_EventHypothesis\_objects, which\
        \ were originally found using waveform correlation. The\_EventHypothesis\_\
        objects provided to this operation may be references or populated objects."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrelatedEventsBySourceEventHypothesesRequest'
      responses:
        '200':
          description: "Successful operation. The response is a CorrelatedEvents collection\
            \ with at most one CorrelatedEvents object for each source EventHypothesis\
            \ provided in the query predicate. The response does not include a\_CorrelatedEvents\_\
            object for a provided source\_EventHypothesis\_if the data store does\
            \ not include waveform correlation results for that\_EventHypothesis.\
            \ The CorrelatedEvents\_objects include faceted attributes populated according\
            \ to the provided FacetingDefinition, or according to their\_defaults\
            \ described in the COI data model if no\_FacetingDefinition\_is provided.\_\
            Each populated ChannelSegment\_object in a returned CorrelatedEvents\_\
            object has timeseries\_collection populated with\_WfdiscWaveformClaimCheck\_\
            objects."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/CorrelatedEvents
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: event-coi.yaml#/components/schemas/CorrelatedEvents
  /event/update:
    post:
      summary: Stores the provided Event, SignalDetection, and ChannelSegment objects,
        updating an Event object if it was previously stored.
      description: "Stores the provided Event, SignalDetection, and ChannelSegment\
        \ objects, updating an Event object if it was previously stored.\_Stores each\
        \ of the provided Event objects or updates an Event object if it was previously\
        \ stored. Stores each of the provided SignalDetection objects or updates a\
        \ SignalDetection object if it was previously stored.\_SignalDetection objects\
        \ are associated to the Event by being associated to the SignalDetectionHypothesis\
        \ objects in the associatedSignalDetectionHypotheses collections of the EventHypothesis\
        \ objects. The ChannelSegment objects associated to the provided SignalDetection\
        \ objects are contained in the provided ChannelSegment object collection.\
        \ For every SignalDetection object that could not be updated or stored, whether\
        \ due to an inconsistency with a previously stored SignalDetection object\
        \ or another issue, all Event objects with associated SignalDetectionHypothesis\
        \ objects contained within that SignalDetection object's signalDetectionHypotheses\
        \ collection are not stored. The ChannelSegment objects are associated to\
        \ the Event objects through the Event objects' associated EventHypothesis\
        \ objects' associated SignalDetectionHypothesis objects' FeatureMeasurement\
        \ objects' measuredChannelSegment and analysisWaveform, the associated EventHypothesis\
        \ objects' associated LocationSolution objects' associated LocationBehavior\
        \ objects' FeatureMeasurement and FeaturePrediction objects, and the associated\
        \ LocationSolution objects' associated NetworkMagnitudeSolution objects' associated\
        \ FeatureMeasurement objects, and are associated to the provided SignalDetection\
        \ objects through the FeatureMeasurement objects' measuredChannelSegment and\
        \ analysisWaveform. For a given Event, checks if that Event was previously\
        \ stored. If that Event was previously stored, checks that the previously\
        \ stored Event is consistent with the current Event. The current Event is\
        \ consistent with the previously stored Event if all EventHypothesis objects\
        \ in the previously stored Event object's eventHypotheses created in the provided\_\
        Stage\_are contained within the current Event object's eventHypotheses collection\
        \ and all EventHypothesis objects in the previously stored Event object's\
        \ finalEventHypothesisHistory are contained within the current Event object's\
        \ finalEventHypothesisHistory in the same order, with all new EventHypothesis\
        \ objects in the history appearing after the previous Event object's finalEventHypothesisHistory\
        \ EventHypothesis objects. If the current Event is consistent with the previously\
        \ stored Event, updates the previously stored Event with the current Event,\
        \ otherwise does not store the current Event. Event objects are not partially\
        \ stored; either the entire Event aggregate is stored or nothing is stored.\
        \ For a given Event, the check for consistency and storage of the aggregate\
        \ Event, along with the associated SignalDetection objects and ChannelSegment\
        \ objects should be a single atomic transaction to prevent a race condition\
        \ from happening if two versions of the same Event with inconsistent eventHypotheses\
        \ collections are stored simultaneously. Stores the Event aggregate by storing\
        \ the Event (when updating a previously stored Event, the previousEventHypothesisbyStage\
        \ and\_eventHypotheses\_collections should be updated to include the new results\
        \ for the provided\_Stage)\_and all EventHypothesis objects in the Event object's\
        \ eventHypotheses that were not previously stored. New SignalDetectionHypothesis\
        \ objects associated to the EventHypothesis are stored by storing the provided\
        \ SignalDetection objects. New ChannelSegment objects are stored by storing\
        \ the provided ChannelSegment objects. New Channel objects associated with\
        \ the EventHypothesis should also be stored; the new Channel objects will\
        \ likely be derived Channel objects. The Data Fabric will typically have previously\
        \ received these associated derived Channel objects through a Channel storage\
        \ request-response service operation. The aggregate Event should only be stored\
        \ if its associated SignalDetection objects and ChannelSegment objects were\
        \ successfully stored. For every successfully stored or updated object, sets\
        \ the object's storage time to the current wall-clock time. See endpoint /signal-detection/update\
        \ for a\_ChannelSegment storage description. See endpoint /waveform/channel-segment/store\
        \ for a\_SignalDetection\_storage description."
      parameters:
      - in: header
        name: time-format
        required: false
        schema:
          $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
      requestBody:
        description: A StoreEventsRequest object. This object includes the current
          stage WorkflowDefinitionId as the identifier for the automatic or interactive
          Stage the caller was working in when creating or updating each provided
          Event.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreEventsRequest'
      responses:
        '200':
          description: All Event objects were successfully stored.
          content:
            application/json: {}
            application/msgpack: {}
        '209':
          description: "Unable to update all or some of the provided Event objects.\
            \ A collection of StoreEventResponse objects including an entry for each\
            \ Event\_provided in the request. If the Event was not stored due to an\
            \ inconsistency with the previously stored Event, storeStatus is set to\
            \ CONFLICT, the event is set to the previously stored Event with EventHypothesis\
            \ objects fully populated, with the signalDetection and channelSegment\
            \ collections left empty. If the Event was not stored due to an inconsistency\
            \ with storing a SignalDetection, storeStatus is set to CONFLICT, the\
            \ event is set to the provided Event populated as an id-only instance,\
            \ the signalDetections collection is set to include all previously stored\
            \ SignalDetection objects that were inconsistent with the new SignalDetection\
            \ objects as the previously stored, fully populated SignalDetection objects\
            \ with fully populated SignalDetectionHypothesis objects and with all\
            \ ChannelSegment objects populated as id-only instances, and the channelSegments\
            \ collection is set to include populated instances of the ChannelSegment\
            \ objects associated to the returned SignalDetection objects that were\
            \ inconsistent. If the Event was not stored for a different reason, storeStatus\
            \ is set to FAILURE, the event is set to the provided Event populated\
            \ as an id-only instance, with the signalDetection and channelSegment\
            \ collections left empty. If the Event was stored, storedStatus is set\
            \ to SUCCESS and the event is set to the provided Event populated as an\
            \ id-only instance with the signalDetection and channelSegment collections\
            \ left empty."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreEventResponse'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreEventResponse'
  # ==========================================
  # FDSN (International Federation of Digital Seismograph Networks) Web Services
  # ==========================================
  # Standard seismological web services following FDSN specifications
  # All FDSN endpoints are prefixed with /fdsn/ to distinguish from GMS-specific endpoints
  
  /fdsnws/dataselect/1/query:
    servers:
    - url: https://service.iris.edu
      description: IRIS Web Services
    get:
      summary: FDSN DataSelect - Retrieve seismic waveform data
      description: |
        **FDSN DataSelect Web Service (v1.1) - IRIS Data Center**
        
        Retrieve seismic time series data in miniSEED format following the FDSN dataselect specification.
        This service provides access to continuous waveform data from IRIS (Incorporated Research Institutions for Seismology) archives.
        
        **IRIS Examples - Real Data Available:**
        - **Global Seismograph Network**: 
          ```
          https://service.iris.edu/fdsnws/dataselect/1/query?net=IU&sta=ANMO&starttime=2025-10-29T00:00:00&endtime=2025-10-29T01:00:00
          ```
        - **IRIS/IDA Network**: 
          ```
          https://service.iris.edu/fdsnws/dataselect/1/query?net=II&sta=BFO&cha=BHZ&starttime=2025-10-29T12:00:00&endtime=2025-10-29T13:00:00
          ```
        - **Alaska Regional**: 
          ```
          https://service.iris.edu/fdsnws/dataselect/1/query?net=AK&sta=RIDG&cha=BHZ&starttime=2025-10-29T00:00:00&endtime=2025-10-29T06:00:00
          ```
        - **California Integrated**: 
          ```
          https://service.iris.edu/fdsnws/dataselect/1/query?net=CI&sta=PASC&cha=HHZ&starttime=2025-10-29T00:00:00&endtime=2025-10-29T01:00:00
          ```
        - **Multiple channels**: 
          ```
          https://service.iris.edu/fdsnws/dataselect/1/query?net=IU&sta=ANMO&cha=BH?&starttime=2025-10-29T00:00:00&endtime=2025-10-29T01:00:00
          ```
        
        **Real IRIS Station Examples:**
        - **IU.ANMO** - Albuquerque, New Mexico (34.95¬∞N, 106.46¬∞W) - Broadband
        - **II.BFO** - Black Forest Observatory, Germany (48.33¬∞N, 8.33¬∞E) - Very Broadband  
        - **IU.CCM** - Cathedral Cave, Missouri (38.06¬∞N, 91.24¬∞W) - Vault Installation
        - **CI.PASC** - Pasadena, California (34.15¬∞N, 118.17¬∞W) - Urban Network
        - **AK.RIDG** - Anchorage, Alaska (61.23¬∞N, 149.89¬∞W) - Regional Array
        
        **Data Format:** Returns miniSEED binary data from IRIS DMC archives.
      tags:
        - FDSN Web Services
      parameters:
      - name: network
        in: query
        required: false
        description: |
          IRIS Network code. Major IRIS-hosted networks:
          - IU: Global Seismograph Network (GSN)
          - II: IRIS/IDA Network (very broadband) 
          - CI: California Integrated Seismic Network
          - AK: Alaska Regional Network
          - US: US National Seismic Network
        schema:
          type: string
        examples:
          gsn:
            value: "IU"
            summary: "Global Seismograph Network"
          iris_ida:
            value: "II" 
            summary: "IRIS/IDA Very Broadband Network"
          california:
            value: "CI"
            summary: "California Integrated Network"
      - name: station
        in: query
        required: false
        description: |
          IRIS Station code. Popular IRIS stations with continuous data:
          - ANMO: Albuquerque, NM (IU network flagship)
          - BFO: Black Forest Observatory, Germany (II network)
          - CCM: Cathedral Cave, MO (quiet vault site)
          - PASC: Pasadena, CA (urban monitoring)
        schema:
          type: string
        examples:
          anmo:
            value: "ANMO"
            summary: "Albuquerque, New Mexico (IU flagship)"
          bfo:
            value: "BFO"
            summary: "Black Forest Observatory, Germany"  
          ccm:
            value: "CCM"
            summary: "Cathedral Cave, Missouri"
          pasc:
            value: "PASC"
            summary: "Pasadena, California"
      - name: location
        in: query
        required: false
        description: Location code (e.g., 00, 10, --)
        schema:
          type: string
        example: "00"
      - name: channel
        in: query
        required: false
        description: |
          Channel code following IRIS/SEED standards. Common IRIS channels:
          - BHZ/BHN/BHE: Broadband (20-80 sps) - most common for GSN
          - HHZ/HHN/HHE: High-rate broadband (80+ sps) - urban networks
          - LHZ/LHN/LHE: Long-period (1 sps) - global monitoring
          - VHZ: Very long period (<1 sps) - special applications
        schema:
          type: string
        examples:
          broadband_vertical:
            value: "BHZ"
            summary: "Broadband vertical (20-80 sps) - GSN standard"
          broadband_all:
            value: "BH?"
            summary: "All broadband channels (Z,N,E)"
          high_rate:
            value: "HHZ"
            summary: "High-rate vertical (80+ sps)"
          long_period:
            value: "LHZ"
            summary: "Long-period vertical (1 sps)"
      - name: starttime
        in: query
        required: true
        description: Start time for data request (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T00:00:00"
      - name: endtime
        in: query
        required: true
        description: End time for data request (ISO 8601 format)
        schema:
          type: string
          format: date-time
        example: "2025-10-29T01:00:00"
      - name: quality
        in: query
        required: false
        description: Data quality (D=raw, R=raw, Q=QC'd, M=merged)
        schema:
          type: string
          enum: [D, R, Q, M]
          default: "B"
        example: "B"
      - name: minimumlength
        in: query
        required: false
        description: Minimum segment length in seconds
        schema:
          type: number
          format: double
        example: 300.0
      - name: longestonly
        in: query
        required: false
        description: Return only the longest continuous segment
        schema:
          type: boolean
          default: false
        example: false
      responses:
        '200':
          description: miniSEED waveform data
          content:
            application/vnd.fdsn.mseed:
              schema:
                type: string
                format: binary
                description: Binary miniSEED data containing seismic time series
        '204':
          description: No data available for the specified parameters
        '400':
          description: Bad request - invalid parameters
        '413':
          description: Request too large - time window or number of channels exceeds limits
        '414':
          description: Request URI too large
        '500':
          description: Internal server error
    post:
      servers:
      - url: https://service.iris.edu
        description: IRIS Web Services
      summary: FDSN DataSelect - Retrieve seismic waveform data (bulk request)
      description: |
        **FDSN DataSelect Web Service (v1.1) - IRIS Bulk Request**
        
        Submit multiple data requests using POST with request body containing selection criteria.
        Useful for requesting data from many IRIS stations or complex time windows.
        
        **IRIS Bulk Request Format:** Plain text with one selection per line:
        ```
        NET STA LOC CHA STARTTIME ENDTIME
        IU ANMO 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
        II BFO 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
        ```
        
        **Real IRIS Networks for Bulk Requests:**
        - **IU** (Global Seismograph): ANMO, CCM, COLA, HRV, KONO
        - **II** (IRIS/IDA): BFO, KAPI, MBAR, PFO, RAYN
        - **CI** (California): PASC, CLC, SBC, WBS, BAR
        - **AK** (Alaska): RIDG, DHY, BMR, CNP, KNK
      tags:
        - FDSN Web Services
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              description: |
                Selection list with one request per line.
                Format: NET STA LOC CHA STARTTIME ENDTIME
                Use * or ? for wildcards, -- for empty location codes.
            example: |
              # IRIS Global Seismograph Network (IU) stations
              IU ANMO 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
              IU CCM 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
              IU COLA 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
              # IRIS/IDA Network (II) stations  
              II BFO 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
              II PFO 00 BHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
              # California Integrated Network (CI)
              CI PASC 01 HHZ 2025-10-29T00:00:00 2025-10-29T01:00:00
              # Multi-channel request for single station
              IU ANMO 00 BH? 2025-10-29T00:00:00 2025-10-29T01:00:00
      responses:
        '200':
          description: miniSEED waveform data
          content:
            application/vnd.fdsn.mseed:
              schema:
                type: string
                format: binary
        '204':
          description: No data available
        '400':
          description: Bad request
  
  /fdsnws/station/1/query:
    servers:
    - url: https://service.iris.edu
      description: IRIS Web Services
    get:
      summary: FDSN Station - Retrieve seismic station metadata from IRIS
      description: |
        **FDSN Station Web Service (v1.1) - IRIS Metadata**
        
        Retrieve metadata about IRIS seismic stations, networks, and channels in StationXML format.
        Provides comprehensive information about station locations, instrumentation, and response characteristics from IRIS Data Management Center.
        
        **üéØ Common Usage Patterns (use ONE pattern, not all parameters):**
        
        **1. Specific Station:** `network=IU&station=ANMO&level=station`
        ```
        https://service.iris.edu/fdsnws/station/1/query?network=IU&station=ANMO&level=station
        ```
        
        **2. Network Overview:** `network=IU&level=network`
        ```
        https://service.iris.edu/fdsnws/station/1/query?network=IU&level=network
        ```
        
        **3. Regional Search:** `minlatitude=32&maxlatitude=42&minlongitude=-125&maxlongitude=-114&level=station`
        ```
        https://service.iris.edu/fdsnws/station/1/query?minlatitude=32&maxlatitude=42&minlongitude=-125&maxlongitude=-114&level=station
        ```
        
        **4. Radial Search:** `latitude=37.78&longitude=-122.42&maxradius=5&level=station`
        ```
        https://service.iris.edu/fdsnws/station/1/query?latitude=37.78&longitude=-122.42&maxradius=5&level=station
        ```
        
        **‚ö†Ô∏è Parameter Groups (don't mix - IRIS will return 400 errors):**
        - **Geographic Box**: minlat + maxlat + minlon + maxlon (NOT with lat/lon/radius)
        - **Radial Search**: lat + lon + maxradius (NOT with min/max lat/lon)
        - **Specific Selection**: network + station + location + channel
        
        **üö´ Common Error**: Don't use both geographic box AND radial search together!
        - ‚ùå BAD: `minlatitude=32&maxlatitude=42&latitude=37&longitude=-122&maxradius=5`
        - ‚úÖ GOOD: `minlatitude=32&maxlatitude=42&minlongitude=-125&maxlongitude=-114`
        - ‚úÖ GOOD: `latitude=37&longitude=-122&maxradius=5`
        
        **IRIS Detail Levels:**
        - `network`: Basic IRIS network information (IU, II, CI, AK, etc.)
        - `station`: Network and station information with coordinates
        - `channel`: Complete channel metadata with sample rates and orientations
        - `response`: Full instrument response functions and calibrations
        
        **IRIS Network Coverage:**
        - **IU**: 152+ GSN stations worldwide (primary global coverage)
        - **II**: 40+ IRIS/IDA very broadband stations  
        - **CI**: 400+ California Integrated Network stations
        - **AK**: 200+ Alaska Regional Network stations
        - **US**: 400+ US National Seismic Network stations
      tags:
        - FDSN Web Services
      parameters:
      - name: network
        in: query
        required: false
        description: |
          **Primary Parameter** - IRIS Network code(s), wildcards supported.
          
          **üéØ Tip**: Start with this parameter for most queries.
          
          **Major IRIS Networks:**
          - IU: Global Seismograph Network (152+ stations worldwide)
          - II: IRIS/IDA Network (40+ very broadband stations)
          - CI: California Integrated Network (400+ regional stations)
          - AK: Alaska Regional Network (200+ stations)
          - US: US National Seismic Network (400+ stations)
          
          **Example Queries:**
          - Single network: `network=IU&level=station`
          - Multiple: `network=IU,II&level=station`
          - All global: `network=*&level=network`
        schema:
          type: string
        examples:
          global:
            value: "IU"
            summary: "Global Seismograph Network (worldwide coverage)"
          iris_ida:
            value: "II"
            summary: "IRIS/IDA Very Broadband Network"
          california:
            value: "CI"
            summary: "California Integrated Network"
          multiple:
            value: "IU,II"
            summary: "Multiple networks (GSN + IRIS/IDA)"
      - name: station
        in: query
        required: false
        description: |
          IRIS Station code(s) - wildcards supported. Famous IRIS stations:
          - ANMO: Albuquerque, NM (IU flagship, 34.95¬∞N, 106.46¬∞W)
          - BFO: Black Forest Observatory, Germany (II network, 48.33¬∞N, 8.33¬∞E)
          - CCM: Cathedral Cave, MO (quiet vault, 38.06¬∞N, 91.24¬∞W)
          - PFO: Pinon Flat Observatory, CA (II network, 33.61¬∞N, 116.46¬∞W)
          - COLA: College Outpost, AK (IU network, 64.87¬∞N, 147.86¬∞W)
        schema:
          type: string
        examples:
          flagship:
            value: "ANMO"
            summary: "Albuquerque, NM - GSN flagship station"
          vault:
            value: "CCM"
            summary: "Cathedral Cave, MO - quiet vault installation"
          observatory:
            value: "BFO"
            summary: "Black Forest Observatory, Germany"
          wildcard:
            value: "A*"
            summary: "All stations starting with A"
      - name: location
        in: query
        required: false
        description: Location code(s) - wildcards supported
        schema:
          type: string
        example: "00"
      - name: channel
        in: query
        required: false
        description: Channel code(s) - wildcards supported
        schema:
          type: string
        example: "BH?"
      - name: starttime
        in: query
        required: false
        description: Start time for station operation
        schema:
          type: string
          format: date-time
        example: "2025-01-01T00:00:00"
      - name: endtime
        in: query
        required: false
        description: End time for station operation
        schema:
          type: string
          format: date-time
        example: "2025-12-31T23:59:59"
      - name: minlatitude
        in: query
        required: false
        description: |
          **Bounding Box Search** - Minimum latitude (decimal degrees).
          
          ‚ö†Ô∏è **Conflict Warning**: Cannot use with latitude/longitude/radius!
          - Use EITHER: minlat/maxlat/minlon/maxlon (bounding box)
          - OR: lat/lon/radius (circular search)
          - NOT both together!
          
          **IRIS Regional Examples:**
          - California: 32¬∞ (San Diego area)
          - Alaska: 55¬∞ (Southern Alaska)
          - Europe: 35¬∞ (Mediterranean)
          - Global GSN: -90¬∞ (Antarctica)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        examples:
          california:
            value: 32.0
            summary: "California region (San Diego to Oregon)"
          alaska:
            value: 55.0
            summary: "Alaska region"
          europe:
            value: 35.0
            summary: "European IRIS stations"
      - name: maxlatitude
        in: query
        required: false
        description: |
          **Bounding Box Search** - Maximum latitude (decimal degrees).
          
          ‚ö†Ô∏è **Conflict Warning**: Cannot use with latitude/longitude/radius!
          
          **IRIS Regional Examples:**
          - California: 42¬∞ (Oregon border)
          - Alaska: 72¬∞ (Northern Alaska)
          - Europe: 70¬∞ (Scandinavia)
          - Global GSN: 90¬∞ (Arctic)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        examples:
          california:
            value: 42.0
            summary: "California region northern boundary"
          alaska:
            value: 72.0
            summary: "Alaska region including Arctic"
          europe:
            value: 70.0
            summary: "European region including Scandinavia"
      - name: minlongitude
        in: query
        required: false
        description: |
          **Bounding Box Search** - Minimum longitude (decimal degrees).
          
          ‚ö†Ô∏è **Conflict Warning**: Cannot use with latitude/longitude/radius!
          
          **IRIS Regional Examples:**
          - US West Coast: -125¬∞ (Pacific Ocean)
          - Alaska: -180¬∞ (Aleutian Islands)
          - Europe: -10¬∞ (Atlantic)
          - East Asia: 120¬∞ (China/Japan)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        examples:
          west_coast:
            value: -125.0
            summary: "US West Coast region"
          europe:
            value: -10.0
            summary: "European region"
          asia:
            value: 120.0
            summary: "East Asian region"
      - name: maxlongitude
        in: query
        required: false
        description: |
          **Bounding Box Search** - Maximum longitude (decimal degrees).
          
          ‚ö†Ô∏è **Conflict Warning**: Cannot use with latitude/longitude/radius!
          
          **IRIS Regional Examples:**
          - US West Coast: -114¬∞ (Nevada border)
          - Alaska: -130¬∞ (Eastern Alaska)
          - Europe: 40¬∞ (Eastern Europe)
          - East Asia: 150¬∞ (Japan)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        examples:
          west_coast:
            value: -114.0
            summary: "US West Coast eastern boundary"
          europe:
            value: 40.0
            summary: "European region eastern boundary"
          asia:
            value: 150.0
            summary: "East Asian region including Japan"
      - name: latitude
        in: query
        required: false
        description: |
          **Radial Search Center** - Latitude for circular search (decimal degrees).
          
          ‚ö†Ô∏è **Conflict Warning**: Cannot use with minlatitude/maxlatitude!
          - Use EITHER: lat/lon/radius (circular search)
          - OR: minlat/maxlat/minlon/maxlon (bounding box)
          - NOT both together!
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 37.7749
      - name: longitude
        in: query
        required: false
        description: |
          **Radial Search Center** - Longitude for circular search (decimal degrees).
          
          ‚ö†Ô∏è **Conflict Warning**: Cannot use with minlongitude/maxlongitude!
          - Use EITHER: lat/lon/radius (circular search)  
          - OR: minlat/maxlat/minlon/maxlon (bounding box)
          - NOT both together!
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -122.4194
      - name: minradius
        in: query
        required: false
        description: Minimum radius from center point (degrees)
        schema:
          type: number
          format: double
          minimum: 0
          maximum: 180
        example: 0.0
      - name: maxradius
        in: query
        required: false
        description: Maximum radius from center point (degrees)
        schema:
          type: number
          format: double
          minimum: 0
          maximum: 180
        example: 10.0
      - name: level
        in: query
        required: false
        description: |
          Level of detail in response. IRIS deployment examples:
          - network: Basic network info (GSN, regional networks)
          - station: Station locations and general info
          - channel: Detailed channel metadata for seismic analysis
          - response: Full instrument response for data processing
        schema:
          type: string
          enum: [network, station, channel, response]
          default: station
        examples:
          network:
            value: "network"
            summary: "Global Seismographic Network overview"
          station:
            value: "station"
            summary: "IRIS station locations and basic metadata"
          channel:
            value: "channel"
            summary: "Detailed channel info for waveform analysis"
          response:
            value: "response"
            summary: "Full instrument response for processing"
      - name: includerestricted
        in: query
        required: false
        description: Include restricted stations in results
        schema:
          type: boolean
          default: true
        example: true
      - name: includeavailability
        in: query
        required: false
        description: Include data availability information
        schema:
          type: boolean
          default: false
        example: false
      - name: format
        in: query
        required: false
        description: Output format
        schema:
          type: string
          enum: [xml, text]
          default: xml
        example: "xml"
      responses:
        '200':
          description: Station metadata in StationXML or text format
          content:
            application/xml:
              schema:
                type: string
                description: StationXML format metadata
            text/plain:
              schema:
                type: string
                description: Pipe-delimited text format
        '204':
          description: No stations found matching criteria
        '400':
          description: Bad request - invalid parameters
        '413':
          description: Request too large
        '500':
          description: Internal server error
  
  /fdsnws/event/1/query:
    servers:
    - url: https://service.iris.edu
      description: IRIS Web Services
    get:
      summary: FDSN Event - Retrieve earthquake catalog data
      description: |
        **FDSN Event Web Service (v1.1)**
        
        Retrieve earthquake event information from seismic catalogs in QuakeML format.
        Provides comprehensive earthquake data including origin times, locations, magnitudes, and uncertainties.
        
        **Common IRIS Queries:**
        - **Recent earthquakes**: 
          ```
          https://service.iris.edu/fdsnws/event/1/query?starttime=2025-10-22T00:00:00&endtime=2025-10-29T00:00:00&minmagnitude=4.0
          ```
        - **Regional events (California)**: 
          ```
          https://service.iris.edu/fdsnws/event/1/query?minlat=32&maxlat=42&minlon=-125&maxlon=-114&minmagnitude=3.0
          ```
        - **Large global events**: 
          ```
          https://service.iris.edu/fdsnws/event/1/query?minmagnitude=6.0&starttime=2025-01-01T00:00:00
          ```
        - **Events near San Francisco**: 
          ```
          https://service.iris.edu/fdsnws/event/1/query?lat=37.78&lon=-122.42&maxradius=2.0&minmagnitude=2.0
          ```
        
        **Output Formats:** QuakeML (XML), CSV text
      tags:
        - FDSN Web Services
      parameters:
      - name: starttime
        in: query
        required: false
        description: Start time for earthquake search
        schema:
          type: string
          format: date-time
        example: "2025-10-22T00:00:00"
      - name: endtime
        in: query
        required: false
        description: End time for earthquake search
        schema:
          type: string
          format: date-time
        example: "2025-10-29T23:59:59"
      - name: minlatitude
        in: query
        required: false
        description: Minimum latitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 32.0
      - name: maxlatitude
        in: query
        required: false
        description: Maximum latitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        example: 42.0
      - name: minlongitude
        in: query
        required: false
        description: Minimum longitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -125.0
      - name: maxlongitude
        in: query
        required: false
        description: Maximum longitude (decimal degrees)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        example: -114.0
      - name: latitude
        in: query
        required: false
        description: |
          Center latitude for radial search. IRIS regional examples:
          - San Francisco Bay Area: 37.78¬∞ (urban seismic hazard)
          - Los Angeles Basin: 34.05¬∞ (major fault systems)
          - Yellowstone: 44.43¬∞ (volcanic seismicity)
          - Alaska: 61.22¬∞ (Anchorage, subduction zone)
        schema:
          type: number
          format: double
          minimum: -90
          maximum: 90
        examples:
          san_francisco:
            value: 37.78
            summary: "San Francisco Bay Area seismicity"
          los_angeles:
            value: 34.05
            summary: "Los Angeles Basin earthquakes"
          yellowstone:
            value: 44.43
            summary: "Yellowstone volcanic seismicity"
          anchorage:
            value: 61.22
            summary: "Alaska subduction zone events"
      - name: longitude
        in: query
        required: false
        description: |
          Center longitude for radial search. IRIS regional examples:
          - San Francisco Bay Area: -122.42¬∞ (urban seismic hazard)
          - Los Angeles Basin: -118.24¬∞ (major fault systems)
          - Yellowstone: -110.67¬∞ (volcanic seismicity)
          - Alaska: -149.90¬∞ (Anchorage, subduction zone)
        schema:
          type: number
          format: double
          minimum: -180
          maximum: 180
        examples:
          san_francisco:
            value: -122.42
            summary: "San Francisco Bay Area seismicity"
          los_angeles:
            value: -118.24
            summary: "Los Angeles Basin earthquakes"
          yellowstone:
            value: -110.67
            summary: "Yellowstone volcanic seismicity"
          anchorage:
            value: -149.90
            summary: "Alaska subduction zone events"
      - name: minradius
        in: query
        required: false
        description: |
          Minimum radius from center (degrees). IRIS search examples:
          - Exclude local: 1.0¬∞ (~111 km, regional context)
          - Teleseismic: 30¬∞ (~3300 km, distant events)
          - Far-field: 90¬∞ (~10000 km, opposite hemisphere)
          - Global: 0¬∞ (include all distances)
        schema:
          type: number
          format: double
          minimum: 0
          maximum: 180
        examples:
          exclude_local:
            value: 1.0
            summary: "Exclude very local events"
          teleseismic:
            value: 30.0
            summary: "Teleseismic distance threshold"
          far_field:
            value: 90.0
            summary: "Far-field seismic waves"
          global:
            value: 0.0
            summary: "Include all distances"
      - name: maxradius
        in: query
        required: false
        description: |
          Maximum radius from center (degrees). IRIS search examples:
          - Local network: 2.0¬∞ (~222 km, regional network)
          - Regional: 10.0¬∞ (~1111 km, regional seismicity)
          - Continental: 30.0¬∞ (~3333 km, continental scale)
          - Hemispheric: 90.0¬∞ (~10000 km, hemisphere)
        schema:
          type: number
          format: double
          minimum: 0
          maximum: 180
        examples:
          local_network:
            value: 2.0
            summary: "Local seismic network coverage"
          regional:
            value: 10.0
            summary: "Regional seismicity pattern"
          continental:
            value: 30.0
            summary: "Continental-scale seismicity"
          hemispheric:
            value: 90.0
            summary: "Hemispheric earthquake catalog"
      - name: mindepth
        in: query
        required: false
        description: |
          Minimum event depth (km). IRIS seismological examples:
          - Surface events: 0 km (volcanic, quarry blasts)
          - Shallow crustal: 5 km (typical crustal earthquakes)
          - Deep crustal: 30 km (lower crust events)
          - Upper mantle: 100 km (subduction zones)
        schema:
          type: number
          format: double
        examples:
          surface:
            value: 0.0
            summary: "Surface and shallow events"
          shallow_crustal:
            value: 5.0
            summary: "Typical crustal earthquakes"
          deep_crustal:
            value: 30.0
            summary: "Lower crustal events"
          upper_mantle:
            value: 100.0
            summary: "Subduction zone events"
      - name: maxdepth
        in: query
        required: false
        description: |
          Maximum event depth (km). IRIS seismological examples:
          - Crustal only: 40 km (continental crust)
          - Shallow focus: 70 km (shallow earthquakes)
          - Intermediate: 300 km (intermediate depth)
          - Deep focus: 700 km (deepest earthquakes)
        schema:
          type: number
          format: double
        examples:
          crustal:
            value: 40.0
            summary: "Continental crustal events only"
          shallow_focus:
            value: 70.0
            summary: "Shallow earthquake classification"
          intermediate:
            value: 300.0
            summary: "Intermediate depth earthquakes"
          deep_focus:
            value: 700.0
            summary: "Deep earthquake classification"
      - name: minmagnitude
        in: query
        required: false
        description: |
          Minimum earthquake magnitude. IRIS catalog examples:
          - Local networks: 1.0 (California microseismicity)
          - Regional monitoring: 3.0 (felt earthquakes)
          - Global catalogs: 4.5 (teleseismic events)
          - Major events: 6.0 (significant earthquakes)
        schema:
          type: number
          format: double
        examples:
          microseismicity:
            value: 1.0
            summary: "California local network threshold"
          felt_events:
            value: 3.0
            summary: "Regional felt earthquake threshold"
          teleseismic:
            value: 4.5
            summary: "Global teleseismic catalog threshold"
          significant:
            value: 6.0
            summary: "Major earthquake threshold"
      - name: maxmagnitude
        in: query
        required: false
        description: |
          Maximum earthquake magnitude. IRIS catalog examples:
          - Local studies: 5.0 (moderate regional events)
          - Regional analysis: 7.0 (major regional events)
          - Global studies: 9.0 (great earthquakes)
          - Historical analysis: 9.5 (largest recorded)
        schema:
          type: number
          format: double
        examples:
          moderate:
            value: 5.0
            summary: "Moderate regional events"
          major:
            value: 7.0
            summary: "Major regional earthquakes"
          great:
            value: 9.0
            summary: "Great earthquakes"
          maximum:
            value: 9.5
            summary: "Largest recorded earthquakes"
      - name: magnitudetype
        in: query
        required: false
        description: |
          Magnitude type. IRIS catalog examples:
          - Mw: Moment magnitude (preferred for M>3.5)
          - ml: Local magnitude (regional networks)
          - mb: Body wave magnitude (teleseismic)
          - Ms: Surface wave magnitude (large events)
        schema:
          type: string
        examples:
          moment:
            value: "Mw"
            summary: "Moment magnitude (GCMT, USGS preferred)"
          local:
            value: "ml"
            summary: "Local magnitude (California, Alaska networks)"
          body_wave:
            value: "mb"
            summary: "Body wave magnitude (teleseismic catalogs)"
          surface_wave:
            value: "Ms"
            summary: "Surface wave magnitude (historical events)"
      - name: eventtype
        in: query
        required: false
        description: Event type (earthquake, quarry blast, etc.)
        schema:
          type: string
        example: "earthquake"
      - name: limit
        in: query
        required: false
        description: Maximum number of events to return
        schema:
          type: integer
          minimum: 1
          maximum: 20000
        example: 100
      - name: offset
        in: query
        required: false
        description: Number of events to skip
        schema:
          type: integer
          minimum: 1
        example: 1
      - name: orderby
        in: query
        required: false
        description: Sort order for results
        schema:
          type: string
          enum: [time, time-asc, magnitude, magnitude-asc]
          default: time
        example: "time"
      - name: catalog
        in: query
        required: false
        description: |
          Catalog to search. IRIS provides access to multiple catalogs:
          - ANSS: Advanced National Seismic System (US comprehensive)
          - GCMT: Global CMT Project (moment tensors)
          - ISC: International Seismological Centre (global)
          - NEIC: National Earthquake Information Center (USGS)
        schema:
          type: string
        examples:
          anss:
            value: "ANSS"
            summary: "US comprehensive earthquake catalog"
          gcmt:
            value: "GCMT"
            summary: "Global moment tensor solutions"
          isc:
            value: "ISC"
            summary: "International comprehensive catalog"
          neic:
            value: "NEIC"
            summary: "USGS global earthquake catalog"
      - name: contributor
        in: query
        required: false
        description: Contributing organization
        schema:
          type: string
        example: "USGS"
      - name: updatedafter
        in: query
        required: false
        description: Events updated after this time
        schema:
          type: string
          format: date-time
        example: "2025-10-25T00:00:00"
      - name: format
        in: query
        required: false
        description: Output format
        schema:
          type: string
          enum: [xml, csv]
          default: xml
        example: "xml"
      - name: nodata
        in: query
        required: false
        description: Response when no data found
        schema:
          type: string
          enum: ['204', '404']
          default: '204'
        example: "204"
      responses:
        '200':
          description: Earthquake event data in QuakeML or CSV format
          content:
            application/xml:
              schema:
                type: string
                description: QuakeML format earthquake catalog data
            text/csv:
              schema:
                type: string
                description: CSV format earthquake data
        '204':
          description: No events found matching criteria
        '400':
          description: Bad request - invalid parameters
        '413':
          description: Request too large
        '500':
          description: Internal server error
components:
  parameters:
    TimeFormat:
      in: header
      name: time-format
      required: false
      description: Format for time values in the response
      schema:
        $ref: ../../Common/OpenAPISpec/common-operations.yaml#/components/schemas/TimeFormat
    StartTime:
      in: query
      name: startTime
      required: false
      description: |
        Start time for filtering events (ISO 8601 format in UTC).
        Supports various formats:
        - Full timestamp: 2025-10-29T14:30:00.000Z
        - Date only: 2025-10-29 (interpreted as 00:00:00.000Z)
        - With timezone: 2025-10-29T14:30:00-05:00
        Examples: Recent seismic events, daily monitoring windows, real-time analysis
      schema:
        type: string
        format: date-time
      examples:
        today: 
          value: "2025-10-29T00:00:00.000Z"
          summary: "Start of today"
        last_week:
          value: "2025-10-22T00:00:00.000Z" 
          summary: "One week ago"
        specific_time:
          value: "2025-10-29T14:30:15.500Z"
          summary: "Specific timestamp with milliseconds"
    EndTime:
      in: query
      name: endTime
      required: false
      description: |
        End time for filtering events (ISO 8601 format in UTC).
        Must be greater than startTime if both are provided.
        Supports the same formats as startTime.
        Examples: Analysis cutoff times, monitoring period endpoints
      schema:
        type: string
        format: date-time
      examples:
        today_end:
          value: "2025-10-31T23:59:59.999Z"
          summary: "End of October 2025"
        now:
          value: "2025-10-29T18:45:30.500Z"
          summary: "Current timestamp"
        next_day:
          value: "2025-10-30T00:00:00.000Z"
          summary: "Start of next day"
    Latitude:
      in: query
      name: latitude
      required: false
      description: Latitude in decimal degrees
      schema:
        type: number
        format: double
        minimum: -90
        maximum: 90
      example: 37.7749
    Longitude:
      in: query
      name: longitude
      required: false
      description: Longitude in decimal degrees
      schema:
        type: number
        format: double
        minimum: -180
        maximum: 180
      example: -122.4194
    RadiusKm:
      in: query
      name: radiusKm
      required: false
      description: Search radius in kilometers
      schema:
        type: number
        format: double
        minimum: 0
        maximum: 20000
      example: 100.0
    StageIds:
      in: query
      name: stageIds
      required: false
      description: Array of stage IDs
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
      example: ["AUTO", "AL1", "AL2"]
    Limit:
      in: query
      name: limit
      required: false
      description: Maximum number of results to return
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
      example: 50
    Offset:
      in: query
      name: offset
      required: false
      description: Number of results to skip (for pagination)
      schema:
        type: integer
        minimum: 0
        default: 0
      example: 0
  schemas:
    TimeStamp:
      type: string
      format: date-time
      description: |
        ISO 8601 formatted timestamp in UTC timezone.
        
        **Supported Formats:**
        - Full precision: YYYY-MM-DDTHH:mm:ss.sssZ
        - Standard: YYYY-MM-DDTHH:mm:ssZ  
        - Date only: YYYY-MM-DD (interpreted as 00:00:00.000Z)
        - With timezone: YYYY-MM-DDTHH:mm:ss¬±HH:mm
        
        **Common Use Cases:**
        - Event occurrence times
        - Signal detection timestamps  
        - Query time ranges
        - Data modification times
        
        **Precision:**
        - Millisecond precision supported (.sss)
        - Microsecond precision in some contexts (.ssssss)
      examples:
        seismic_event:
          value: "2025-10-29T14:32:17.850Z"
          summary: "Seismic event detection time"
        daily_start:
          value: "2025-10-29T00:00:00.000Z" 
          summary: "Start of day for daily analysis"
        real_time:
          value: "2025-10-29T18:45:30.123Z"
          summary: "Real-time monitoring timestamp"
        historical:
          value: "2025-09-15T08:15:42.500Z"
          summary: "Historical event for comparison"
        high_precision:
          value: "2025-10-29T14:32:17.850123Z"
          summary: "High precision timestamp with microseconds"
    # ==========================================
    # FDSN-specific schemas and data models
    # ==========================================
    FDSNStationXML:
      type: string
      format: xml
      description: |
        StationXML format compliant with FDSN Station Web Service specification.
        Contains comprehensive metadata about seismic networks, stations, channels, and instrument responses.
        
        **Structure:**
        - Network level: Basic network information and station list
        - Station level: Station coordinates, site information, channel list  
        - Channel level: Detailed channel metadata, sample rates, orientations
        - Response level: Complete instrument response functions and calibrations
        
        **Validation:** Must comply with StationXML v1.1 schema
      example: |
        <?xml version="1.0" encoding="UTF-8"?>
        <FDSNStationXML xmlns="http://www.fdsn.org/xml/station/1">
          <Network code="IU" startDate="1988-01-01T00:00:00">
            <Description>Global Seismograph Network</Description>
            <Station code="ANMO" startDate="1989-08-29T00:00:00">
              <Latitude>34.9459</Latitude>
              <Longitude>-106.4572</Longitude>
              <Elevation>1820.0</Elevation>
              <Site><Name>Albuquerque, New Mexico, USA</Name></Site>
            </Station>
          </Network>
        </FDSNStationXML>
    
    FDSNQuakeML:
      type: string
      format: xml
      description: |
        QuakeML format compliant with FDSN Event Web Service specification.
        Contains earthquake event information including origins, magnitudes, picks, and uncertainties.
        
        **Event Information:**
        - Origin time and location with uncertainties
        - Multiple magnitude estimates (Mw, mb, Ms, ml, etc.)
        - Phase picks and arrival times
        - Focal mechanisms and moment tensors
        - Quality assessment and processing metadata
        
        **Validation:** Must comply with QuakeML v1.2 schema
      example: |
        <?xml version="1.0" encoding="UTF-8"?>
        <q:quakeml xmlns:q="http://quakeml.org/xmlns/quakeml/1.2">
          <eventParameters>
            <event publicID="smi:usgs.gov/event/usc000lvb5">
              <origin>
                <time><value>2025-10-29T14:32:17.850Z</value></time>
                <latitude><value>37.7749</value></latitude>
                <longitude><value>-122.4194</value></longitude>
                <depth><value>8500</value></depth>
              </origin>
              <magnitude>
                <mag><value>4.2</value></mag>
                <type>ml</type>
              </magnitude>
            </event>
          </eventParameters>
        </q:quakeml>
    
    FDSNMiniSEED:
      type: string
      format: binary
      description: |
        miniSEED format seismic data following SEED (Standard for the Exchange of Earthquake Data) specification.
        Binary format containing time series waveform data with metadata headers.
        
        **Data Structure:**
        - Fixed 512-byte records with header and data payload
        - Compressed data using Steim1, Steim2, or other encoding
        - Sample rates from 0.1 to 20,000+ samples per second
        - Support for multiple data types (integer, float)
        
        **Metadata Headers:**
        - Network, station, location, channel codes (NSLC)
        - Start time and sample rate
        - Data quality indicators
        - Calibration and timing information
        
        **Usage:** Standard format for seismic data exchange and archiving
      example: "Binary miniSEED data - 512-byte records containing compressed seismic time series"
    
    FDSNNetworkCode:
      type: string
      pattern: '^[A-Z0-9]{1,8}$'
      description: |
        FDSN network code following SEED naming conventions.
        
        **Format Rules:**
        - 1-8 alphanumeric characters
        - Uppercase letters and numbers only
        - No special characters or spaces
        
        **Common Examples:**
        - IU: Global Seismograph Network
        - II: IRIS/IDA Seismic Network  
        - GT: Global Telemetered Seismograph Network
        - CU: Caribbean Network
        - IM: International Monitoring System
      example: "IU"
    
    FDSNStationCode:
      type: string
      pattern: '^[A-Z0-9]{1,5}$'
      description: |
        FDSN station code following SEED naming conventions.
        
        **Format Rules:**
        - 1-5 alphanumeric characters
        - Uppercase letters and numbers only
        - Unique within network
        
        **Examples:**
        - ANMO: Albuquerque, New Mexico
        - CCM: Cathedral Cave, Missouri
        - BOSA: Bosa, Colombia
        - COLA: College Outpost, Alaska
      example: "ANMO"
    
    FDSNLocationCode:
      type: string
      pattern: '^[A-Z0-9\-]{0,2}$'
      description: |
        FDSN location code for distinguishing multiple instruments at same station.
        
        **Format Rules:**
        - 0-2 characters (can be empty)
        - Alphanumeric or dash (--) for empty
        - Case sensitive
        
        **Common Values:**
        - 00: Primary location
        - 10: Secondary location  
        - --: Empty/unspecified location
        - 20: Borehole instrument
      example: "00"
    
    FDSNChannelCode:
      type: string
      pattern: '^[A-Z][A-Z][A-Z]$'
      description: |
        FDSN channel code identifying specific data stream characteristics.
        
        **Format: BBB (Band-Instrument-Orientation)**
        
        **Band Code (sample rate):**
        - F: ‚â• 1000 sps, < 5000 sps
        - G: ‚â• 1000 sps, < 5000 sps (Gap)
        - D: ‚â• 250 sps, < 1000 sps  
        - C: ‚â• 250 sps, < 1000 sps (Continued)
        - E: ‚â• 80 sps, < 250 sps
        - S: ‚â• 10 sps, < 80 sps
        - H: ‚â• 80 sps, < 250 sps (High)
        - B: ‚â• 10 sps, < 80 sps (Broad)
        - M: < 10 sps (Medium)
        - L: < 1 sps (Long)
        - V: < 0.1 sps (Very long)
        - U: < 0.01 sps (Ultra long)
        
        **Instrument Code:**
        - H: High gain seismometer
        - L: Low gain seismometer  
        - G: Gravimeter
        - M: Mass position seismometer
        - N: Accelerometer
        
        **Orientation:**
        - Z: Vertical
        - N: North-South horizontal
        - E: East-West horizontal
        - 1,2,3: Orthogonal components
      examples:
        broadband_vertical:
          value: "BHZ"
          summary: "Broadband high-gain vertical seismometer"
        broadband_north:
          value: "BHN" 
          summary: "Broadband high-gain north component"
        broadband_east:
          value: "BHE"
          summary: "Broadband high-gain east component"
        high_freq_vertical:
          value: "HHZ"
          summary: "High frequency vertical seismometer"
        accelerometer_vertical:
          value: "HNZ"
          summary: "High frequency accelerometer vertical"
    FacetingDefinition:
      type: object
      required:
      - classType
      - facetingDefinitionByAttributeName
      properties:
        classType:
          type: string
        populated:
          type: boolean
        facetingDefinitionByAttributeName:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FacetingDefinition'
    Comment:
      type: object
      required:
      - id
      - author
      - comment
      - time
      properties:
        id:
          type: string
          format: uuid
        author:
          type: string
        comment:
          type: string
        time:
          type: string
          format: date-time
    FieldMap:
      type: object
      additionalProperties:
        type: object
    DoubleValue:
      type: object
      required:
      - value
      - units
      properties:
        value:
          type: number
          format: double
        standardDeviation:
          type: number
          format: double
        units:
          $ref: '#/components/schemas/Units'
    InstantValue:
      type: object
      required:
      - value
      properties:
        value:
          type: string
          format: date-time
        standardDeviation:
          type: string
          format: duration
    DurationValue:
      type: object
      required:
      - value
      properties:
        value:
          type: string
          format: duration
        standardDeviation:
          type: string
          format: duration
    Units:
      type: string
      enum:
      - COUNTS
      - COUNTS_PER_NANOMETER
      - COUNTS_PER_PASCAL
      - DECIBELS
      - DEGREES
      - DEGREES_PER_KILOMETER
      - DEGREES_PER_SECOND
      - HERTZ
      - KILOMETERS
      - KILOMETERS_PER_SECOND
      - LOG_NANOMETERS
      - MICROPASCALS
      - MICROPASCALS_PER_COUNT
      - MICROPASCALS_SQUARED_PER_SECOND
      - NANOMETERS
      - NANOMETERS_PER_COUNT
      - NANOMETERS_PER_SECOND
      - NANOMETERS_SQUARED_PER_SECOND
      - ONE_OVER_DEGREES
      - ONE_OVER_KILOMETERS
      - PASCALS
      - PASCALS_PER_COUNT
      - PASCALS_SQUARED_PER_SECOND
      - RADIANS
      - SECONDS
      - SECONDS_PER_DEGREE
      - SECONDS_PER_DEGREE_KILOMETER
      - SECONDS_PER_DEGREE_SQUARED
      - SECONDS_PER_KILOMETER
      - SECONDS_PER_KILOMETER_PER_DEGREE
      - SECONDS_PER_KILOMETER_SQUARED
      - SECONDS_PER_RADIAN
      - UNITLESS
    StoreStatus:
      type: string
      enum:
      - CONFLICT
      - FAILURE
      - SUCCESS
    CreationInfo:
      type: object
      required:
      - createdBy
      - creationTime
      - stageId
      properties:
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        stageId:
          $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
    TimeFormat:
      type: string
      enum:
      - EPOCH
      - ISO
      description: Provided in an HTTP Header. Defines the format of date and time
        values in request and response objects. When not provided, the date and time
        values default to the ISO 8601 Date and Time format.
    Event:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          format: uuid
        monitoringOrganization:
          type: string
        eventHypotheses:
          type: array
          items:
            $ref: '#/components/schemas/EventHypothesis'
          minItems: 1
        finalEventHypothesisHistory:
          type: array
          items:
            $ref: '#/components/schemas/EventHypothesis'
        preferredEventHypothesisByStage:
          type: array
          items:
            $ref: '#/components/schemas/PreferredEventHypothesis'
          minItems: 1
        rejectedSignalDetectionAssociations:
          type: array
          items:
            $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/SignalDetection
    EventHypothesis:
      type: object
      required:
      - id
      properties:
        creationInfo:
          $ref: ../../Common/OpenAPISpec/common-coi.yaml#/components/schemas/CreationInfo
        rejected:
          type: boolean
        preferredLocationSolution:
          $ref: '#/components/schemas/LocationSolution'
        parentEventHypotheses:
          type: array
          items:
            $ref: '#/components/schemas/EventHypothesis'
        locationSolutions:
          type: array
          items:
            $ref: '#/components/schemas/LocationSolution'
          minItems: 1
        id:
          $ref: '#/components/schemas/EventHypothesisId'
        deleted:
          type: boolean
        associatedSignalDetectionHypotheses:
          type: array
          items:
            $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/SignalDetectionHypothesis
    LocationSolution:
      type: object
      required:
      - id
      properties:
        featurePredictions:
          type: array
          items:
            $ref: '#/components/schemas/FeaturePrediction'
        id:
          type: string
          format: uuid
        location:
          $ref: '#/components/schemas/EventLocation'
        locationBehaviors:
          type: array
          items:
            $ref: '#/components/schemas/LocationBehavior'
        locationRestraint:
          $ref: '#/components/schemas/LocationRestraint'
        locationUncertainty:
          $ref: '#/components/schemas/LocationUncertainty'
        networkMagnitudeSolutions:
          type: array
          items:
            $ref: '#/components/schemas/NetworkMagnitudeSolution'
        ellipseIntersectionRegions:
          type: array
          items:
            $ref: '#/components/schemas/GeographicRegionId'
        epicenterGeographicRegions:
          type: array
          items:
            $ref: '#/components/schemas/GeographicRegionId'
    GeographicRegionId:
      type: object
      required:
      - id
      - effectiveAt
      properties:
        id:
          type: string
          format: uuid
        effectiveAt:
          type: string
          format: date-time
    LocationBehavior:
      type: object
      required:
      - defining
      - definingInfo
      - measurement
      properties:
        defining:
          type: boolean
        definingInfo:
          $ref: '#/components/schemas/DefiningInfo'
        measurement:
          $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/FeatureMeasurement
        prediction:
          $ref: '#/components/schemas/FeaturePrediction'
        residual:
          type: number
          format: double
        weight:
          type: number
          format: double
          minimum: 0.0
          exclusiveMinimum: true
    LocationRestraint:
      type: object
      required:
      - depthRestraintType
      - epicenterRestraintType
      - timeRestraintType
      properties:
        depthRestraintKm:
          type: number
          format: double
          minimum: -100.0
          maximum: 1000.0
        depthRestraintReason:
          $ref: '#/components/schemas/DepthRestraintReason'
        depthRestraintType:
          $ref: '#/components/schemas/RestraintType'
        epicenterRestraintType:
          $ref: '#/components/schemas/RestraintType'
        latitudeRestraintDegrees:
          type: number
          format: double
          minimum: -90.0
          maximum: 90.0
        longitudeRestraintDegrees:
          type: number
          format: double
          minimum: -180.0
          maximum: 180.0
        restrainer:
          $ref: '#/components/schemas/RestrainerType'
        timeRestraint:
          type: string
          format: date-time
        timeRestraintType:
          $ref: '#/components/schemas/RestraintType'
    LocationUncertainty:
      type: object
      required:
      - ellipses
      - ellipsoids
      properties:
        ellipses:
          type: array
          items:
            $ref: '#/components/schemas/Ellipse'
        ellipsoids:
          type: array
          items:
            $ref: '#/components/schemas/Ellipsoid'
        stdDevTravelTimeResiduals:
          type: number
          format: double
          minimum: 0
        tt:
          type: number
          format: double
          minimum: 0.0
          exclusiveMinimum: true
        xt:
          type: number
          format: double
        xx:
          type: number
          format: double
          minimum: 0.0
          exclusiveMinimum: true
        xy:
          type: number
          format: double
        xz:
          type: number
          format: double
        yt:
          type: number
          format: double
        yy:
          type: number
          format: double
          minimum: 0.0
          exclusiveMinimum: true
        yz:
          type: number
          format: double
        zt:
          type: number
          format: double
        zz:
          type: number
          format: double
          minimum: 0.0
          exclusiveMinimum: true
    Ellipse:
      type: object
      required:
      - aprioriStandardError
      - confidenceLevel
      - kWeight
      - scalingFactorType
      properties:
        aprioriStandardError:
          type: number
          format: double
          minimum: 0
          maximum: 1000
        confidenceLevel:
          type: number
          format: double
          minimum: 0.5
          maximum: 1.0
        depthUncertaintyKm:
          type: number
          format: double
          minimum: 0
          description: Uncertainty in the LocationSolution depth.
        kWeight:
          type: number
          format: double
          minimum: 0
        scalingFactorType:
          $ref: '#/components/schemas/ScalingFactorType'
        semiMajorAxisLengthKm:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        semiMajorAxisTrendDeg:
          type: number
          format: double
          minimum: 0
          maximum: 360
          exclusiveMaximum: true
        semiMinorAxisLengthKm:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        timeUncertainty:
          type: string
          format: duration
    Ellipsoid:
      type: object
      required:
      - aprioriStandardError
      - confidenceLevel
      - kWeight
      - scalingFactorType
      properties:
        aprioriStandardError:
          type: number
          format: double
          minimum: 0
          maximum: 1000
        confidenceLevel:
          type: number
          format: double
          minimum: 0.5
          maximum: 1.0
        kWeight:
          type: number
          format: double
          minimum: 0
        scalingFactorType:
          $ref: '#/components/schemas/ScalingFactorType'
        semiIntermediateAxisLengthKm:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        semiIntermediateAxisPlungeDeg:
          type: number
          format: double
          minimum: 0
          maximum: 90
        semiIntermediateAxisTrendDeg:
          type: number
          format: double
          minimum: 0
          maximum: 360
          exclusiveMaximum: true
        semiMajorAxisLengthKm:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        semiMajorAxisPlungeDeg:
          type: number
          format: double
          minimum: 0
          maximum: 90
        semiMajorAxisTrendDeg:
          type: number
          format: double
          minimum: 0
          maximum: 360
          exclusiveMaximum: true
        semiMinorAxisLengthKm:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        semiMinorAxisPlungeDeg:
          type: number
          format: double
          minimum: 0
          maximum: 90
        semiMinorAxisTrendDeg:
          type: number
          format: double
          minimum: 0
          maximum: 360
          exclusiveMaximum: true
        timeUncertainty:
          type: string
          format: duration
    FeaturePrediction:
      type: object
      required:
      - extrapolated
      - featurePredictionComponents
      - phase
      - predictionType
      - predictedValue
      - receiverLocation
      properties:
        channel:
          $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Channel
        extrapolated:
          type: boolean
        featurePredictionComponents:
          type: array
          items:
            $ref: '#/components/schemas/FeaturePredictionComponent'
          minItems: 1
        phase:
          $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/PhaseType
        predictionChannelSegment:
          $ref: ../../Waveform/OpenAPISpec/waveform-coi.yaml#/components/schemas/ChannelSegment
        predictionType:
          $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/FeatureMeasurementType
        predictedValue:
          oneOf:
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/AmplitudeMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/ArrivalTimeMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/NumericMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/EnumeratedMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/DurationMeasurementValue
        receiverLocation:
          $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Location
        sourceLocation:
          $ref: '#/components/schemas/EventLocation'
    FeaturePredictionComponent:
      type: object
      required:
      - extrapolated
      - predictedComponentType
      - value
      properties:
        earthModel:
          type: string
        extrapolated:
          type: boolean
        predictedComponentType:
          $ref: '#/components/schemas/FeaturePredictionComponentType'
        value:
          oneOf:
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/AmplitudeMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/ArrivalTimeMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/NumericMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/EnumeratedMeasurementValue
          - $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/DurationMeasurementValue
    NetworkMagnitudeSolution:
      type: object
      required:
      - networkMagnitudeBehaviors
      - type
      - status
      properties:
        magnitude:
          $ref: ../../Common/OpenAPISpec/common-coi.yaml#/components/schemas/DoubleValue
        networkMagnitudeBehaviors:
          type: array
          items:
            $ref: '#/components/schemas/NetworkMagnitudeBehavior'
          minItems: 1
        type:
          $ref: '#/components/schemas/MagnitudeType'
        status:
          $ref: '#/components/schemas/NetworkMagnitudeStatus'
    NetworkMagnitudeBehavior:
      type: object
      required:
      - defining
      - definingInfo
      - stationMagnitudeSolution
      properties:
        defining:
          type: boolean
        definingInfo:
          $ref: '#/components/schemas/DefiningInfo'
        residual:
          type: number
          format: double
        stationMagnitudeSolution:
          $ref: '#/components/schemas/StationMagnitudeSolution'
        weight:
          type: number
          format: double
          minimum: 0
    StationMagnitudeSolution:
      type: object
      required:
      - attenuationModel
      - phase
      - station
      - type
      properties:
        attenuationModel:
          type: string
        magnitude:
          $ref: ../../Common/OpenAPISpec/common-coi.yaml#/components/schemas/DoubleValue
        measurement:
          $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/FeatureMeasurement
        modelCorrection:
          type: number
          format: double
        phase:
          $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/PhaseType
        station:
          $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Station
        stationCorrection:
          type: number
          format: double
        type:
          $ref: '#/components/schemas/MagnitudeType'
    EventStatusInfo:
      type: object
      required:
      - id
      - activeAnalystIds
      - eventStatus
      properties:
        id:
          $ref: '#/components/schemas/EventStatusInfoId'
        activeAnalystIds:
          type: array
          items:
            type: string
        eventStatus:
          $ref: '#/components/schemas/EventStatus'
    EventStatusInfoId:
      type: object
      required:
      - stageId
      - event
      properties:
        stageId:
          $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
        event:
          $ref: '#/components/schemas/Event'
    FeaturePredictionComponentType:
      type: string
      enum:
      - AZIMUTH_PATH_CORRECTION
      - BASEMODEL_PREDICTION
      - BULK_STATIC_STATION_CORRECTION
      - ELEVATION_CORRECTION
      - ELLIPTICITY_CORRECTION
      - MASTER_EVENT_CORRECTION
      - SLOWNESS_PATH_CORRECTION
      - SOURCE_DEPENDENT_CORRECTION
      - TRAVEL_TIME_PATH_CORRECTION
      - UNCERTAINTY_DISTANCE_DEPENDENT
      - UNCERTAINTY_PATH_DEPENDENT
      - UNCERTAINTY_STATION_PHASE_DEPENDENT
    ScalingFactorType:
      type: string
      enum:
      - CONFIDENCE
      - COVERAGE
      - K_WEIGHTED
    RestraintType:
      type: string
      enum:
      - FIXED
      - UNRESTRAINED
    DepthRestraintReason:
      type: string
      enum:
      - FIXED_AT_DEPTH_FOUND_USING_DEPTH_PHASE_MEASUREMENTS
      - FIXED_AT_STANDARD_DEPTH
      - FIXED_AT_SURFACE
      - OTHER
    RestrainerType:
      type: string
      enum:
      - FIXED_BY_ANALYST
      - FIXED_BY_CONFIGURATION
      - FIXED_BY_LOCATOR
      - UNKNOWN
    PreferredEventHypothesis:
      type: object
      required:
      - preferred
      - preferredBy
      - stage
      properties:
        preferred:
          $ref: '#/components/schemas/EventHypothesis'
        preferredBy:
          type: string
        stage:
          $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
    EventHypothesisId:
      type: object
      required:
      - eventId
      - hypothesisId
      properties:
        eventId:
          type: string
          format: uuid
        hypothesisId:
          type: string
          format: uuid
    EventLocation:
      type: object
      required:
      - latitudeDegrees
      - longitudeDegrees
      - depthKm
      - time
      properties:
        latitudeDegrees:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitudeDegrees:
          type: number
          format: double
          minimum: -180
          maximum: 180
        depthKm:
          type: number
          format: double
        time:
          type: string
          format: date-time
    MagnitudeType:
      type: string
      enum:
      - MB
      - MB_CODA
      - MB_MB
      - MB_MLE
      - MB_PG
      - MB_REL_T
      - ML
      - MS
      - MS_MLE
      - MS_VMAX
      - MW_CODA
    NetworkMagnitudeStatus:
      type: string
      enum:
      - DID_NOT_CONVERGE
      - TOO_FEW_DEFINING_STA_MAG
      - VALID
      - OTHER_FAILURE
    DefiningInfo:
      type: object
      required:
      - analystOverrideAllowed
      - requestedDefining
      - setBy
      - systemOverrideAllowed
      properties:
        analystOverrideAllowed:
          type: boolean
        requestedDefining:
          type: boolean
        setBy:
          $ref: '#/components/schemas/DefinerType'
        systemOverrideAllowed:
          type: boolean
    DefinerType:
      type: string
      enum:
      - ALGORITHM_OVERRIDE
      - ANALYST_OVERRIDE
      - CONFIGURATION_FORCED
      - DEFAULT
    EventStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - NOT_COMPLETE
      - COMPLETE
    CorrelatedEvents:
      type: object
      required:
      - correlatedEventHypotheses
      - scanType
      - sourceEventHypothesis
      properties:
        correlatedEventHypotheses:
          type: array
          items:
            $ref: '#/components/schemas/CorrelatedEventHypothesis'
          minItems: 1
        scanType:
          $ref: '#/components/schemas/CorrelatedEventScanType'
        sourceEventHypothesis:
          type: object
          $ref: '#/components/schemas/EventHypothesis'
    CorrelatedEventScanType:
      type: string
      enum:
      - AUTOMATIC
      - REFERENCE
      - USER
    CorrelatedEventHypothesis:
      type: object
      required:
      - correlationCoefficient
      - correlationReferenceTime
      - eventCorrelationContext
      - similarEventChannelSegments
      - similarEventHypothesis
      - sourceEventChannelSegments
      properties:
        correlationCoefficient:
          type: number
          format: double
        correlationReferenceTime:
          type: string
          format: date-time
        eventCorrelationContext:
          type: object
          $ref: '#/components/schemas/EventCorrelationContext'
        similarEventChannelSegments:
          type: array
          items:
            $ref: ../../Waveform/OpenAPISpec/waveform-coi.yaml#/components/schemas/ChannelSegment
          minItems: 1
        similarEventHypothesis:
          type: object
          $ref: '#/components/schemas/EventHypothesis'
        sourceEventChannelSegments:
          type: array
          items:
            $ref: ../../Waveform/OpenAPISpec/waveform-coi.yaml#/components/schemas/ChannelSegment
          minItems: 1
    EventCorrelationContext:
      type: object
      required:
      - channels
      - station
      - waveformConditioningByChannel
      properties:
        channels:
          type: array
          items:
            $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Channel
          minItems: 1
        station:
          type: object
          $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Station
        waveformConditioningByChannel:
          type: array
          items:
            $ref: '#/components/schemas/ChannelFilterDefinitionPair'
    ChannelFilterDefinitionPair:
      type: object
      required:
      - channel
      - filterDefinition
      properties:
        channel:
          type: object
          $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Channel
        filterDefinition:
          type: object
          $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/FilterDefinition
    EventsOutsideRangeWithSignalDetectionsInsideRangeRequest:
      type: object
      required:
      - stageIds
      - stations
      - signalDetectionStartTime
      - signalDetectionEndTime
      properties:
        stageIds:
          type: array
          items:
            $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
          minItems: 1
        stations:
          type: array
          items:
            $ref: ../../StationDefinition/OpenAPISpec/station-definition-coi.yaml#/components/schemas/Station
          minItems: 1
        signalDetectionStartTime:
          type: string
          format: date-time
        signalDetectionEndTime:
          type: string
          format: date-time
        changedSinceTime:
          type: string
          format: date-time
    EventsWithDetectionsAndSegmentsByTimeRequest:
      type: object
      required:
      - endTime
      - stageIds
      - startTime
      properties:
        endTime:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        stageIds:
          type: array
          items:
            $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
          minItems: 1
        changedSinceTime:
          type: string
          format: date-time
    EventsWithSignalDetectionsAndSegments:
      type: object
      required:
      - events
      - signalDetectionsWithChannelSegments
      properties:
        events:
          type: array
          items:
            $ref: event-coi.yaml#/components/schemas/Event
        signalDetectionsWithChannelSegments:
          $ref: ../../SignalDetection/OpenAPISpec/signal-detection-operations.yaml#/components/schemas/SignalDetectionsWithChannelSegments
    EventStatusInfoByStageIdAndEventsRequest:
      type: object
      required:
      - events
      - stageId
      properties:
        events:
          type: array
          items:
            $ref: event-coi.yaml#/components/schemas/Event
          minItems: 1
        stageId:
          $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
    EventStatusInfoByStageIdAndTimeRequest:
      type: object
      required:
      - changedSinceTime
      - stageId
      - startTime
      - endTime
      properties:
        changedSinceTime:
          type: string
          format: date-time
        stageId:
          $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
        endTime:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
    EventStatusInfoUpdateRequest:
      type: object
      required:
      - eventStatusInfo
      properties:
        eventStatusInfo:
          $ref: event-coi.yaml#/components/schemas/EventStatusInfo
    CorrelatedEventsBySourceEventHypothesesRequest:
      type: object
      required:
      - sourceEventHypotheses
      - facetingDefinition
      properties:
        sourceEventHypotheses:
          type: array
          items:
            $ref: event-coi.yaml#/components/schemas/EventHypothesis
          minItems: 1
        facetingDefinition:
          type: object
          $ref: ../../Common/OpenAPISpec/common-coi.yaml#/components/schemas/FacetingDefinition
    StoreEventsRequest:
      type: object
      required:
      - events
      - signalDetections
      - channelSegments
      - stageId
      properties:
        events:
          type: array
          items:
            $ref: event-coi.yaml#/components/schemas/Event
          minItems: 1
        signalDetections:
          type: array
          items:
            $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/SignalDetection
        channelSegments:
          type: array
          items:
            $ref: ../../Waveform/OpenAPISpec/waveform-coi.yaml#/components/schemas/ChannelSegment
        stageId:
          $ref: ../../Intervals/OpenAPISpec/workflow-coi.yaml#/components/schemas/WorkflowDefinitionId
    StoreEventResponse:
      type: object
      required:
      - event
      - storeStatus
      - signalDetections
      - channelSegments
      properties:
        event:
          $ref: event-coi.yaml#/components/schemas/Event
        storeStatus:
          $ref: ../../Common/OpenAPISpec/common-coi.yaml#/components/schemas/StoreStatus
        signalDetections:
          type: array
          items:
            $ref: ../../SignalDetection/OpenAPISpec/signal-detection-coi.yaml#/components/schemas/SignalDetection
        channelSegments:
          type: array
          items:
            $ref: ../../Waveform/OpenAPISpec/waveform-coi.yaml#/components/schemas/ChannelSegment
servers:
- url: https://api.example.com
  description: Example GMS API Server
- url: https://service.iris.edu/fdsnws
  description: IRIS FDSN Web Services (for FDSN endpoints only)
  variables: {}
